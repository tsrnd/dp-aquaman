swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Yashoes"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
- name: "User"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      tags:
      - "User"
      summary: "Create user"
      description: "Tạo mới user"
      operationId: "createUser"
      consumes:
      - "application/x-www-form-urlencoded"
      parameters:
      - $ref: '#/parameters/Username'
      - $ref: '#/parameters/Email'
      - $ref: '#/parameters/Password'
      - $ref: '#/parameters/Address'
      - $ref: '#/parameters/Role'
      - $ref: '#/parameters/PhoneNumber'
      responses:
        '200':
          description: Successful response
  /user/login:
    get:
      tags:
      - "User"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        400:
          description: "Invalid username/password supplied"
  /user/logout:
    get:
      tags:
      - "User"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
parameters:
  Username:
    name: username
    in: formData
    type: string
    required: true
  Email:
    name: email
    in: formData
    type: string
    required: true
  Password:
    name: password
    in: formData
    type: string
    required: true
  Address:
    name: address
    in: formData
    type: string
    required: false
  Role:
    name: address
    in: formData
    type: integer
    required: true
  PhoneNumber:
    name: phone_number
    in: formData
    type: integer
    required: false
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
