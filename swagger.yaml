swagger: "2.0"
info:
  version: "1.0.0"
  title: "Swagger Yashoes"
tags:
- name: "User"
- name: "Product"
- name: "Comment"
schemes:
- "https"
- "http"
paths:
  /api/user/register:
    post:
      tags:
      - "User"
      summary: "Register user"
      description: "Đăng ký người dùng"
      operationId: "registerUser"
      consumes:
      - "application/x-www-form-urlencoded"
      parameters:
      - $ref: '#/parameters/Username'
      - $ref: '#/parameters/Email'
      - $ref: '#/parameters/Password'
      - $ref: '#/parameters/Password_Confirm'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request error response
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
  /api/user/login:
    post:
      tags:
      - "User"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        '200':
          description: Successful response
          schema:
            title: Successful response
            type: object
            properties:
              token:
                $ref: '#/definitions/Token'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
  /api/user/refresh-token:
    post:
      tags:
      - "User"
      summary: "refresh expirer time for token"
      description: ""
      operationId: "refreshToken"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "query"
        description: "access token"
        required: true
        type: "string"
      responses:
        '200':
          description: Successful response
          schema:
            title: Successful response
            type: object
            properties:
              token:
                $ref: '#/definitions/Token'
        '400':
          description: Bad request error response
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
  /api/products:
    get:
      tags:
      - "Product"
      summary: "Get all product from database"
      description: ""
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/Page'
      - $ref: '#/parameters/ResultLimit'
      responses:
        '200':
          description: Successful response
          schema:
            title: Successful response
            type: object
            properties:
              result_count:
                type: integer
                description: 'Count of result in this response'
              page:
                $ref: '#/definitions/Page'
              next_page_flg:
                $ref: '#/definitions/NextPageFlg'
              result:
                type: array
                description: 'list of product(name, description, rating)'
                items:
                  $ref: '#/definitions/Product'
        '400':
          description: Bad request error response
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
          schema:
            $ref: '#/definitions/ErrorDetails'
  /api/products/{id_product}:
    get:
      tags:
      - "Product"
      summary: "Get detail product from database"
      description: ""
      produces:
      - "application/json"
      parameters:
        - name: id_product
          in: path
          description: Product ID in product table
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            title: Successful response
            type: object
            properties:
              id:
                type: integer
                example: 1
                description: 'Id of product'
              name:
                type: string
                description: 'Name of product'
              description:
                type: string
              rate:
                type: number
                example: 3.5
              versions:
                type: array
                description: 'list of version(id, name, size, color, image_link, price, quantity)'
                items:
                  $ref: '#/definitions/Version'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
          schema:
            $ref: '#/definitions/ErrorDetails'
  /api/products/homepage:
    get:
      tags:
      - "Product"
      summary: "Get product for homepage"
      description: ""
      produces:
      - "application/json"
      responses:
        '200':
          description: Successful response
          schema:
            title: Successful response
            type: object
            properties:
              result:
                type: array
                description: "list product for homepage"
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    brand_name:
                      type: string    
                      example: "nike"
                    product:
                      $ref: '#/definitions/Product' 
        '400':
          description: Bad request error response
          schema:
            $ref: '#/definitions/ErrorDetails'
        '500':
          description: Internal server error response
          schema:
            $ref: '#/definitions/ErrorDetails'
            
  /api/products/{product_id}/comments:
    get:
      tags: 
      - "Comment"
      summary: get comments about product
      description: lấy bình luận về sản phẩm
      parameters:
        - name: product_id
          in: path
          description: Product ID in product table
          required: true
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            title: Successful response
            type: object
            properties:
              data:
                type: array
                description: data
                items: 
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: 'Id of comment'
                    username:
                      type: string    
                      example: sonvu
                    content:
                      type: string
                      example: cui bap
                    comments:
                      type: array
                      items:
                        type: object
                        properties: 
                          id: 
                            type: integer
                            example: 2
                            description: 'Id of comment'
                          username:
                            type: string    
                            example: minhleo
                          content:
                            type: string
                            example: cmnr
                          created_at: 
                            type: string
                            format: date
                    created_at: 
                        type: string
                        format: date       
    post:
      tags:
      - "Comment"
      summary: post a comment
      description: đăng bình luận về sản phẩm
      consumes:
      - "application/x-www-form-urlencoded"
      parameters:
      - $ref: '#/parameters/Product'
      - $ref: '#/parameters/Content'
      - $ref: '#/parameters/Parent_comment'
      responses:
        200:
          description: Successful response

securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
consumes:
- "application/x-www-form-urlencoded"
- "multipart/form-data"
parameters:
  Username:
    name: username
    in: formData
    type: string
    required: true
  Email:
    name: email
    in: formData
    type: string
    required: true
  Password:
    name: password
    in: formData
    type: string
    required: true
  Password_Confirm:
    name: password_confirm
    in: formData
    type: string
    required: true
  Product:
    name: product_id
    in: path
    type: integer
    required: true
  Content:
    name: content
    in: formData
    type: string
    required: true
  Parent_comment:
    name: parent_comment_id
    in: formData
    type: integer
    required: false
  Page:
    name: page
    in: query
    description:  |  
     specify the number of page.  
     if not seted,the number of page is 1.
    required: false
    type: integer
  ResultLimit:
    name: result_limit
    in: query
    required: false
    type: integer
    description: |
      Limit count of response record of list.
      if not set,response record limit is 5.
      MIN = 1
      DEFAULT = 5
      MAX = 100
definitions:
  Token:
    type: string
    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.XbPfbIHMI6arZ3Y922BhjWgQzWXcXNrz0ogtVhfEd2o"
  Page:
    type: integer
    description:
      from request parameter
    example: 2
  NextPageFlg:
    type: boolean
    description:
      result about whether next page exists."True" means next page exists,"False" means next page not existx
  Product:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
        description: name of product
        example: "taylor chuck II"
      description:
        type: string
        description: description of product for display.
        example: 'New York, ニューヨーク州 アメリカ合衆国'
      rate:
        type: integer
        description: avg rating of product
        example: 4.5
      image_link:
        type: string
        example: "localhost:9000/users/1/product/1/abc.jpg"
  Version:
    type: object
    properties:
      id:
        type: integer
        example: 1
        description: name of version
      color:
        type: string
      price:
        type: integer
      size:
        type: string
      quantity:
        type: integer
      image_link:
        type: string
        example: image.jpeg
  ErrorDetails:
    title: Error details
    type: object
    properties:
      field_name:
        type: array
        items:
          description: error detail
          type: string
